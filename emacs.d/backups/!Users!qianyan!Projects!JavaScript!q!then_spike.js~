var defer = require("node-promise/promise").defer;
var util = require('util');
var obj = {then: function(resolver, reject){
    return resolver('i am then obj.');
}};

var obj1 = {A: 'AA'};
var obj2 = {then: 'then'};
var obj3 = {then: function(x, y){return y('s');}};
var obj4 = {then: function(){}};
function printFirstAndLast(itemsDeferred){
    findFirst(itemsDeferred).then(util.puts);
    last(itemsDeferred).then(function(last){
      //  var deferred = defer();
      //  deferred.reject('error');
      //  return deferred.promise;

        var deferred = defer();
        deferred.resolve(last);
        //findFirst(deferred).then(util.puts)
            util.puts(1);
    }).then(function(result){
        console.log('result', result);
    },function(reason){
        console.log('reason', reason);
    });
}
function f(itemDeferred) {
    return itemDeferred.then(function(){}, function(reason){

        //var deferred = defer();
        //deferred.reject('error-1');
        util.puts('1:'+reason);
        //return deferred.promise;
        //return 'error-1';
        return obj4;
    }).then(function(result){
        util.puts('resovle 2:'+result);
    }, function(reason){
        util.puts('reject 2:'+reason);
    });
}

function last(itemsDeferred) {
    return itemsDeferred.then(function(items){
        return items.slice(1, items.length);
    });
}

function findFirst(itemsDeferred){
    return itemsDeferred.then(function(items){
        return items[0];
    });
}
function findLast(itemsDeferred){
    return itemsDeferred.then(function(items){
        return items[items.length - 1];
    });
}
var deferred = defer();
//deferred.resolve([1, 2, 3, 4, 5]);
//printFirstAndLast(deferred);
deferred.reject('error-0');
f(deferred);

